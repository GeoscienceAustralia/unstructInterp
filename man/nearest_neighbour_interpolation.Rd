% Generated by roxygen2 (4.0.1): do not edit by hand
\name{nearest_neighbour_interpolation}
\alias{nearest_neighbour_interpolation}
\title{Function for nearest neighbour interpolation}
\usage{
nearest_neighbour_interpolation(xy, vals, newPts)
}
\arguments{
\item{xy}{= points locations associated with values to interpolation from (typically nx2 matrix)}

\item{vals}{= values at xy (can be a matix with 1 or more colums, and the same number of rows as xy)}

\item{newPts}{= points where we want interpolated values (typically mx2 matrix)}
}
\value{
matrix/vector with as many columns as 'vals' and as many rows as 'newPts', containing the 'vals' interpolated to 'newPts'
}
\description{
Basically a wrapper around the SearchTrees package
}
\examples{
# Make a single triangle in the plane z=x+y, and interpolate from it
   xy=matrix(c(0,0,0,1,1,1),ncol=2,byrow=TRUE)
   vals=c(0, 1, 2) # z=x+y
   newPts=matrix(c(0.1, 0.9, 0.9, 0.9), ncol=2, byrow=TRUE)

   out=nearest_neighbour_interpolation(xy, vals, newPts)
   stopifnot(all.equal(out, c(1,2)))
}

